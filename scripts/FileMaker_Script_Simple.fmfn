#####################################################################
# SCRIPT FILEMAKER: Generar QR Simple
# Descripci√≥n: Script b√°sico para generar c√≥digo QR desde FileMaker
# Endpoint: POST /comprobantes/generar-qr
# Versi√≥n: 1.0
#####################################################################

# ===============================
# VARIABLES DE CONFIGURACI√ìN
# ===============================
Set Variable [ $servidor ; Value: "https://tu-servidor.com" ]
Set Variable [ $token ; Value: "tu_token_bearer_aqui" ]

# ===============================
# OBTENER DATOS DE LA FACTURA
# ===============================
Set Variable [ $rnc ; Value: Facturas::EmisorRNC ]
Set Variable [ $ncf ; Value: Facturas::NCF ]
Set Variable [ $codigo ; Value: Facturas::CodigoSeguridad ]
Set Variable [ $fecha ; Value: Facturas::FechaEmision ]
Set Variable [ $monto ; Value: Facturas::Total ]

# Validar datos obligatorios
If [ IsEmpty ( $rnc ) or IsEmpty ( $ncf ) or IsEmpty ( $codigo ) or IsEmpty ( $fecha ) ]
    Show Custom Dialog [ "Datos Incompletos" ; 
        "‚ùå Faltan datos obligatorios para el QR:¬∂" &
        "‚Ä¢ RNC: " & If ( IsEmpty ( $rnc ) ; "‚ùå Faltante" ; "‚úÖ " & $rnc ) & "¬∂" &
        "‚Ä¢ NCF: " & If ( IsEmpty ( $ncf ) ; "‚ùå Faltante" ; "‚úÖ " & $ncf ) & "¬∂" &
        "‚Ä¢ C√≥digo: " & If ( IsEmpty ( $codigo ) ; "‚ùå Faltante" ; "‚úÖ " & $codigo ) & "¬∂" &
        "‚Ä¢ Fecha: " & If ( IsEmpty ( $fecha ) ; "‚ùå Faltante" ; "‚úÖ " & $fecha ) & "¬∂¬∂" &
        "üí° Primero debe enviar la factura electr√≥nica"
    ]
    Exit Script [ Text Result: "Error: Datos incompletos" ]
End If

# ===============================
# PREPARAR PETICI√ìN HTTP
# ===============================
Set Variable [ $headers ; Value: "Authorization: Bearer " & $token & ¬∂ & 
                                "Content-Type: application/json" ]

Set Variable [ $body ; Value: JSONSetElement ( "{}" ; 
    [ "rnc" ; $rnc ; JSONString ] ;
    [ "ncf" ; $ncf ; JSONString ] ;
    [ "codigo" ; $codigo ; JSONString ] ;
    [ "fecha" ; $fecha ; JSONString ] ;
    [ "monto" ; $monto ; JSONString ] ;
    [ "formato" ; "png" ; JSONString ] ;
    [ "tama√±o" ; 250 ; JSONNumber ]
) ]

# ===============================
# EJECUTAR PETICI√ìN
# ===============================
# Configurar cURL options para la petici√≥n
Set Variable [ $curl_options ; Value: 
    "--header \"" & $headers & "\"" & 
    " --data \"" & Substitute ( $body ; "\"" ; "\\\"" ) & "\""
]

Insert from URL [ Select ; With dialog: Off ; Target: $resultado ; $servidor & "/comprobantes/generar-qr" ; cURL options: $curl_options ]

# ===============================
# PROCESAR RESPUESTA
# ===============================
Set Variable [ $status ; Value: JSONGetElement ( $resultado ; "status" ) ]

If [ $status = "success" ]
    # ===========================
    # CASO EXITOSO
    # ===========================
    Set Variable [ $qr_code ; Value: JSONGetElement ( $resultado ; "data.qrCode" ) ]
    Set Variable [ $version ; Value: JSONGetElement ( $resultado ; "data.version" ) ]
    Set Variable [ $cumple_dgii ; Value: JSONGetElement ( $resultado ; "data.especificaciones.cumpleNormativaDGII" ) ]
    
    # Guardar el QR en el campo (compatible con todas las versiones)
    # Verificar si es FileMaker 16+ (soporta Data URLs directamente)
    If [ Get ( ApplicationVersion ) ‚â• "Pro 16.0" ]
        # FileMaker 16+ - Data URL directo
        Set Field [ Facturas::QRCode ; $qr_code ]
    Else
        # FileMaker 15 y anteriores - Decodificar Base64
        Set Variable [ $base64_start ; Value: Position ( $qr_code ; "," ; 1 ; 1 ) + 1 ]
        Set Variable [ $base64_data ; Value: Middle ( $qr_code ; $base64_start ; Length ( $qr_code ) ) ]
        Set Variable [ $imagen_binaria ; Value: Base64Decode ( $base64_data ) ]
        Set Field [ Facturas::QRCode ; $imagen_binaria ]
    End If
    
    Set Field [ Facturas::FechaQR ; Get ( CurrentTimeStamp ) ]
    Set Field [ Facturas::VersionQR ; $version ]
    
    # Mostrar confirmaci√≥n
    Set Variable [ $metodo_insercion ; Value: If ( Get ( ApplicationVersion ) ‚â• "Pro 16.0" ; "Data URL directo" ; "Base64 decodificado" ) ]
    Show Custom Dialog [ "QR Generado Exitosamente" ; 
        "‚úÖ C√≥digo QR generado correctamente¬∂" &
        "üì± Versi√≥n QR: " & $version & " (DGII)¬∂" &
        "üìã FileMaker: " & Get ( ApplicationVersion ) & "¬∂" &
        "üîß M√©todo: " & $metodo_insercion & "¬∂" &
        "‚úÖ Cumple normativa: " & If ( $cumple_dgii = True ; "S√≠" ; "No" ) & "¬∂" &
        "üïí Generado: " & Get ( CurrentTimeStamp )
    ]
    
Else
    # ===========================
    # CASO ERROR
    # ===========================
    Set Variable [ $error_msg ; Value: JSONGetElement ( $resultado ; "message" ) ]
    Set Variable [ $error_details ; Value: JSONGetElement ( $resultado ; "details" ) ]
    
    Show Custom Dialog [ "Error al generar QR" ; 
        "‚ùå " & $error_msg & "¬∂" &
        If ( not IsEmpty ( $error_details ) ; "Detalles: " & $error_details ; "" )
    ]
    
    # Log del error para debugging
    Set Field [ Facturas::UltimoError ; $error_msg & " - " & Get ( CurrentTimeStamp ) ]
End If

#####################################################################
# FIN DEL SCRIPT
#####################################################################